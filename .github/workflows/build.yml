name: Build and Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install pytest

      - name: Run Tests
        run: pytest
      - name: Run Super-Linter
        uses: super-linter/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main



  build-upload:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install pyinstaller
      - name: Archive
        run: |
          sudo apt-get update
          sudo apt-get install zip
          zip -r archive.zip *
      - name: Build application
        run: pyinstaller --noupx --onedir --onefile --windowed main.py
      - name: Build Docker image
        run: docker build -t myapp .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag Docker image
        run: docker tag myapp ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: application
          path: ./dist/main
          if-no-files-found: error
      - name: Upload Release Asset
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.credentials }}
          filename: "archive.zip"
          folderId: ${{ secrets.folderId }}
          overwrite: "true"
          mirrorDirectoryStructure: "true"

  deploy-sef-hosted:
    needs: build-upload
    runs-on: self-hosted
    steps:
      - name: pull docker image
        run: docker pull black1rabbit/myapp:latest

      - name: run the container
        run: docker run -it black1rabbit/myapp:latest